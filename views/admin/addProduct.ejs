<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Cosmeta Admin - Add Product</title>
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.2/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css"
    />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>

    <style>
      .sidebar {
        min-height: 100vh;
        background-color: #1a1a1a;
        color: white;
      }
      .sidebar .nav-link {
        color: #ffffff;
        padding: 0.8rem 1rem;
        opacity: 0.8;
      }
      .sidebar .nav-link:hover {
        opacity: 1;
        background: rgba(255, 255, 255, 0.1);
      }
      .sidebar .nav-link.active {
        background: rgba(255, 255, 255, 0.1);
        opacity: 1;
      }
      .form-style {
        position: relative;
        font-size: 15px;
      }
      .form-style span {
        position: absolute;
        left: 55%;
        bottom: 3px;
        font-size: small;
      }
      #submit-error {
        color: red;
        font-size: small;
      }
      .form-style span i {
        color: seagreen;
        font-size: 15px;
      }
    </style>
  </head>
  <body>
    <div class="container-fluid">
      <div class="row">
        <!-- Sidebar -->
        <div class="col-auto px-0 sidebar">
          <div class="d-flex flex-column p-3">
            <h3 class="mb-4">Cosmeta</h3>
            <ul class="nav nav-pills flex-column gap-2">
              <li class="nav-item">
                <a href="/admin/dashboard" class="nav-link">
                  <i class="bi bi-speedometer2 me-2"></i>Dashboard
                </a>
              </li>
              <li class="nav-item">
                <a href="/admin/user" class="nav-link">
                  <i class="bi bi-people me-2"></i>Users
                </a>
              </li>
              <li class="nav-item">
                <a href="/admin/products" class="nav-link active">
                  <i class="bi bi-box me-2"></i>Products
                </a>
              </li>
              <li class="nav-item">
                <a href="/admin/category" class="nav-link">
                  <i class="bi bi-tags me-2"></i>Category
                </a>
              </li>
              <li class="nav-item">
                <a href="/admin/brand" class="nav-link">
                  <i class="bi bi-award me-2"></i>Brands
                </a>
              </li>
              <li class="nav-item">
                <a href="#" class="nav-link">
                  <i class="bi bi-cart me-2"></i>Orders
                </a>
              </li>
              <li class="nav-item">
                <a href="#" class="nav-link">
                  <i class="bi bi-ticket-perforated me-2"></i>Coupons
                </a>
              </li>
              <li style="margin-bottom: 5%" class="nav-item">
                <a href="#" class="nav-link">
                  <i class="bi bi-gift me-2"></i>Offers
                </a>
              </li>
            </ul>
            <a href="/admin/logout">
              <button
                style="margin-left: 9%"
                class="btn btn-outline-light mt-auto"
              >
                <i class="bi bi-box-arrow-right me-2"></i>Logout
              </button>
            </a>
          </div>
        </div>

        <!-- Main Content -->
        <div class="col px-4 py-3">
          <div class="d-flex justify-content-between align-items-center mb-4">
            <h2>Add New Product</h2>

            <a href="/admin/products" class="btn btn-outline-secondary">
              <i class="bi bi-arrow-left me-2"></i>Back to Products
            </a>
          </div>

          <div class="card">
            <div class="card-body">
              <form
                id="addProductForm"
                action="/admin/products/add"
                method="post"
                enctype="multipart/form-data"
                onsubmit="return validateProduct()"
              >
                <div class="row mb-3">
                  <div class="col-md-6 form-style">
                    <label class="form-label">Product Name</label>
                    <input
                      type="text"
                      class="form-control"
                      name="name"
                      id="productName"
                      onkeyup="validateName()"
                    />
                    <span id="name-error" style="color: red"></span>
                  </div>
                  <div class="col-md-6 form-style">
                    <label class="form-label">Brand</label>
                    <select
                      class="form-select"
                      name="brand"
                      id="productBrand"
                      onkeyup="validateBrand()"
                    >
                      <option value="">Select Brand</option>
                      <% brands.forEach(function(brand) { %>
                      <option value="<%= brand._id%>"><%= brand.name %></option>
                      <% }); %>
                    </select>
                    <span id="brand-error" style="color: red"></span>
                  </div>
                </div>
                <div class="row mb-3">
                  <div class="col-md-6 form-style">
                    <label class="form-label">Category</label>
                    <select
                      class="form-select"
                      name="category"
                      id="productCategory"
                      onkeyup="validateCategory()"
                    >
                      <option value="">Select category</option>
                      <% categories.forEach(function(category) { %>
                      <option value="<%= category._id %>">
                        <%= category.name %>
                      </option>
                      <% }); %>
                    </select>
                    <span id="category-error" style="color: red"></span>
                  </div>
                  <div class="col-md-3 form-style">
                    <label class="form-label">Price</label>
                    <input
                      type="number"
                      class="form-control"
                      name="price"
                      min="1"
                      id="productPrice"
                      onkeyup="validatePrice()"
                    />
                    <span id="price-error" style="color: red"></span>
                  </div>
                  <div class="col-md-3 form-style">
                    <label for="quantity" class="form-label">Stock</label>
                    <input
                      type="number"
                      class="form-control"
                      name="stock"
                      min="0"
                      id="productStock"
                      onkeyup="validateStock()"
                    />
                    <span id="stock-error" style="color: red"></span>
                  </div>
                </div>
                <div class="mb-3">
                  <label class="form-label"
                    >Product Images (Select up to 3 images)</label
                  >
                  <div class="row">
                    <div class="col-md-4">
                      <label for="imageInput1" class="form-label"
                        >Image 1</label
                      >
                      <input
                        type="file"
                        id="imageInput1"
                        class="form-control mb-2"
                        accept="image/*"
                        name="images1"
                        required
                      />
                    </div>
                    <div class="col-md-4">
                      <label for="imageInput2" class="form-label"
                        >Image 2</label
                      >
                      <input
                        type="file"
                        id="imageInput2"
                        class="form-control mb-2"
                        accept="image/*"
                        name="images2"
                        required
                      />
                    </div>
                    <div class="col-md-4">
                      <label for="imageInput3" class="form-label"
                        >Image 3</label
                      >
                      <input
                        type="file"
                        id="imageInput3"
                        class="form-control mb-2"
                        accept="image/*"
                        name="images3"
                        required
                      />
                    </div>
                  </div>
                </div>
                <div class="mb-3">
                  <label class="form-label">Image Previews</label>
                  <div
                    style="
                      width: 300px;
                      display: flex;
                      gap: 10px;
                      justify-content: center;
                    "
                    id="imagePreviewContainer"
                    class="row"
                  >
                    <!-- Image previews will appear here -->
                  </div>
                </div>
                <div class="mb-3">
                  <label class="form-label">Available Shade</label>
                  <div class="row" id="colorPickerContainer">
                    <div class="col-md-4 mb-2">
                      <div class="input-group form-style">
                        <input
                          type="color"
                          class="form-control form-control-color"
                          name="shades[]"
                          required
                        />
                        <input
                          type="text"
                          class="form-control"
                          placeholder="Color name"
                          name="colorNames[]"
                          id="colorName"
                          onkeyup="validateShade()"
                        />
                        <span
                          id="shade-error"
                          style="color: red; display: block"
                        ></span>
                      </div>
                    </div>
                  </div>
                </div>
                <div class="mb-3 form-style">
                  <label class="form-label">Description</label>
                  <textarea
                    class="form-control"
                    rows="3"
                    name="description"
                    id="productDescription"
                    onkeyup="validateDescription()"
                  ></textarea>
                  <span id="description-error" style="color: red"></span>
                </div>

                <p style="color: red; font-size: medium" id="error-mssg"></p>

                <div class="text-end">
                  <a href="/admin/products" class="btn btn-secondary me-2"
                    >Cancel</a
                  >
                  <button type="submit" class="btn btn-primary">
                    Add Product
                  </button>
                  <div><p id="submit-error"></p></div>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
    </div>

    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const form = document.getElementById("addProductForm");
        const imageInputs = form.querySelectorAll('input[type="file"]');
        const imagePreviewContainer = document.getElementById(
          "imagePreviewContainer"
        );
        const cropInstances = [];
        const error = document.getElementById("error-mssg");

        imageInputs.forEach((imageInput, index) => {
          imageInput.addEventListener("change", function (event) {
            const file = event.target.files[0];
            if (file) {
              const reader = new FileReader();
              reader.onload = function (e) {
                let imagePreview = document.getElementById(
                  `imagePreview-${index}`
                );
                if (!imagePreview) {
                  imagePreview = document.createElement("img");
                  imagePreview.id = `imagePreview-${index}`;
                  imagePreviewContainer.appendChild(imagePreview);
                }
                imagePreview.style.display = "block";
                imagePreview.src = e.target.result;

                if (cropInstances[index]) {
                  cropInstances[index].destroy();
                }

                cropInstances[index] = new Cropper(imagePreview, {
                  aspectRatio: 3 / 4,
                  viewMode: 1,
                  zoomable: true,
                  scalable: true,
                  cropBoxResizable: true,
                });
              };
              reader.readAsDataURL(file);
            }
          });
        });

        form.addEventListener("submit", function (event) {
          event.preventDefault();
          const croppedBlobs = [];
          const cropPromises = cropInstances.map((cropper, index) => {
            return new Promise((resolve, reject) => {
              if (cropper) {
                cropper.getCroppedCanvas().toBlob((blob) => {
                  if (blob) {
                    croppedBlobs.push({ name: `image-${index + 1}.jpg`, blob });
                    resolve();
                  } else {
                    reject(new Error("Failed to create blob"));
                  }
                });
              } else {
                resolve();
              }
            });
          });

          Promise.all(cropPromises)
            .then(() => {
              const formData = new FormData();
              const formFields = new FormData(form);
              for (let [key, value] of formFields.entries()) {
                if (!key.startsWith("images")) {
                  formData.append(key, value);
                }
              }
              croppedBlobs.forEach(({ name, blob }) => {
                formData.append("images", blob, name);
              });

              fetch("/admin/products/add", {
                method: "POST",
                body: formData,
              })
                .then((response) => {
                  if (!response) {
                    throw new Error("Failed to add product");
                  }
                  return response.json();
                })
                .then((data) => {
                  if (data.success) {
                    window.location.href = "/admin/products";
                  } else {
                    error.textContent = data.message;
                  }
                })
                .catch((error) => {
                  console.error(error);
                });
            })
            .catch((error) => {
              console.error(error);
            });
        });
      });

      let nameerror = document.getElementById("name-error");
      let priceerror = document.getElementById("price-error");
      let branderror = document.getElementById("brand-error");
      let categoryerror = document.getElementById("category-error");
      let stockerror = document.getElementById("stock-error");
      let shadeerror = document.getElementById("shade-error");
      let descriptionerror = document.getElementById("description-error");
      let submiterror = document.getElementById("submit-error");

      function validateName() {
        let name = document.getElementById("productName").value;
        if (name.length === 0) {
          nameerror.innerHTML = "Product name is required.";
          return false;
        }
        if (name.length < 3) {
          nameerror.innerHTML = "require atleat 3 characters";
          return false;
        }
        if (!name.match(/^[A-Za-z][A-Za-z0-9.]/)) {
          nameerror.innerHTML = "Name Invalid";
          return false;
        }
        nameerror.innerHTML = '<i class="bi bi-check-circle-fill"></i>';
        return true;
      }
      function validatePrice() {
        let price = document.getElementById("productPrice").value;
        if (price.length === 0 || price.length > 10) {
          priceerror.innerHTML = "Price is required.";
          return false;
        }
        if (price.match(/^[0]/)) {
          priceerror.innerHTML = "Enter valid price.";
          return false;
        }
        if (!price.match(/^[0-9]/)) {
          priceerror.innerHTML = "Enter a valid price.";
          return false;
        }
        priceerror.innerHTML = '<i class="bi bi-check-circle-fill"></i>';
        return true;
      }
      function validateStock() {
        let stock = document.getElementById("productStock").value;
        if (stock.length === 0) {
          stockerror.innerHTML = "Stock is required.";
          return false;
        }
        if (!stock.match(/^[0-9]/)) {
          stockerror.innerHTML = "Enter valid number of stocks.";
          return false;
        }
        stockerror.innerHTML = '<i class="bi bi-check-circle-fill"></i>';
        return true;
      }
      function validateShade() {
        let shadeName = document.getElementById("colorName").value;
        if (shadeName.length === 0) {
          shadeerror.innerHTML = "Shade required.";
          return false;
        }
        if (!shadeName.match(/^[A-Za-z]/)) {
          shadeerror.innerHTML = "Invalid";
          return false;
        }
        shadeerror.innerHTML = '<i class="bi bi-check-circle-fill"></i>';
        return true;
      }
      function validateDescription() {
        let description = document.getElementById("productDescription").value;
        if (description.length === 0) {
          descriptionerror.innerHTML = "Description is required.";
          return false;
        }
        if (description.length < 10) {
          descriptionerror.innerHTML = "Atleast 10 characters is needed.";
          return false;
        }
        if (!description.match(/^[A-Za-z][A-Za-z0-9._,''"":]/)) {
          descriptionerror.innerHTML = "Invalid description.";
          return false;
        }
        descriptionerror.innerHTML = '<i class="bi bi-check-circle-fill"></i>';
        return true;
      }

      function validateBrand() {
        let brand = document.getElementById("productBrand").value;
        if (brand === "") {
          branderror.innerHTML = "Please select a brand.";
          return false;
        }
        branderror.innerHTML = '<i class="bi bi-check-circle-fill"></i>';
        return true;
      }

      function validateCategory() {
        let category = document.getElementById("category").value;
        if (category === "") {
          categoryerror.innerHTML = "Please select a category.";
          return false;
        }
        categoryerror.innerHTML = '<i class="bi bi-check-circle-fill"></i>';
        return true;
      }

      function validateProduct() {
        if (
          !validateName() ||
          !validatePrice() ||
          !validateStock() ||
          !validateShade() ||
          !validateDescription() ||
          !validateBrand() ||
          !validateCategory()
        ) {
          submiterror.innerHTML = "Fix errors to Add Product.";
          return false;
        }
        return true;
      }
    </script>
    <script>
      document.addEventListener("DOMContentLoaded", function () {
  const MAX_FILE_SIZE = 2 * 1024 * 1024; // 2MB in bytes
  const ALLOWED_FILE_TYPES = ["image/jpeg", "image/png", "image/gif"];

  const imageInputs = document.querySelectorAll('input[type="file"]');

  imageInputs.forEach((imageInput) => {
    imageInput.addEventListener("change", function (event) {
      const file = event.target.files[0];

      if (!file) return;

      // Validate file type
      if (!ALLOWED_FILE_TYPES.includes(file.type)) {
        alert("Invalid file type! Only JPG, JPEG, PNG, and GIF are allowed.");
        event.target.value = ""; // Clear the input
        return;
      }

      // Validate file size
      if (file.size > MAX_FILE_SIZE) {
        alert("File size exceeds 2MB! Please upload a smaller image.");
        event.target.value = ""; // Clear the input
        return;
      }
    });
  });
});

    </script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.2/js/bootstrap.bundle.min.js"></script>
  </body>
</html>
