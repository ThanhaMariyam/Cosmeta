<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Checkout</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css" rel="stylesheet">
  <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
  <link rel="stylesheet" href="/userSignup.css" />
  <link rel="stylesheet" href="/home.css" />
  <link rel="stylesheet" href="/search.css">


  <style>
    .address-card {
      border: 1px solid #ddd;
      border-radius: 8px;
      padding: 15px;
      margin-bottom: 15px;
      cursor: pointer;
      transition: all 0.3s ease;
    }

    .address-card:hover {
      border-color: #742070;
    }

    .address-card.selected {
      border: 2px solid #742070;
      background-color: #faf5f9;
    }

    .form-control {
      padding: 12px 16px;
      border-radius: 8px;
    }

    .payment-option {
      border: 1px solid #ddd;
      border-radius: 8px;
      padding: 15px;
      margin-bottom: 15px;
      cursor: pointer;
    }

    .payment-option:hover {
      border-color: #742070;
    }

    .payment-option.selected {
      border: 2px solid #742070;
      background-color: #faf5f9;
    }

    .order-summary {
      background-color: #fbfbfb;
      border-radius: 8px;
      padding: 20px;
    }

    .back-btn {
      color: #742070;
      text-decoration: none;
      font-weight: 500;
    }

    .product-img {
      width: 80px;
      height: 80px;
      object-fit: cover;
      border-radius: 4px;
    }

    .details {
      margin: 0;
    }

    .coupon-code {
      width: 75%;
      height: 40px;
      border-radius: 4px;
      border: 1px solid black;
      padding-left: 10px;
    }
  </style>
</head>

<body>


  <%- include('../partials/nav.ejs') %>

  <div class="box">
    <div class="item">
      <a href="/">Home</a>
      <a href="/category">Category</a>
      <a href="/brand">Brand</a>
      <a href="">About us</a>
      <a href="">Contact us</a>
    </div>
    <%- include('../partials/header.ejs') %>
  </div>

  <div class="container py-4">

    <div class="mb-4">
      <a href="/cart" class="back-btn">
        <i class="bi bi-arrow-left"></i> Back
      </a>
    </div>

    <div class="row">

      <div class="col-lg-7">
        <h6>Shipping Address</h6>

        <div class="card mb-1">

          <div class="card-body">



            <div id="addressListView">
              <% if (shippingAddress) { %>
              <div>

                <p class="details"><strong><%= shippingAddress.firstName %> <%= shippingAddress.lastName %></strong></p>
                <p class="details"><%= shippingAddress.phone %></p>
                <p class="details"><%= shippingAddress.streetAddress %>, <%= shippingAddress.city %> - <%= shippingAddress.pincode %></p>
                <p class="details"> <%= shippingAddress.state %>, <%= shippingAddress.country %></p>

              </div>

              <a href="/address?from=checkout">
                <butto style="padding: 5px 15px;height: 38px;" class="btn btn-primary">Edit/Change</button>
              </a> <a href="/addAddress?from=checkout">
                <button style="margin-top: 10px;" class="btn btn-outline-dark">+ Add Address</button>
              </a>

              <% } else { %>
              <p>You haven't added any address yet!</p>
              <a href="/addAddress?from=checkout">
                <button class="btn btn-outline-dark">+ Add Address</button>
              </a>
              <% } %>


            </div>





          </div>
        </div>





        <div class="card">
          <div class="card-body">
            <h5 class="card-title mb-4">Payment Method</h5>

            <div class="payment-option">
              <div class="form-check">
                <input class="form-check-input" type="radio" name="paymentMethod" id="cod" value="Cash on Delivery" <%= cart.totalPrice > 1000 ? 'disabled' : '' %>>


                <label class="form-check-label" for="cod">
                  <strong>Cash on Delivery</strong>
                  <% if(cart.totalPrice < 1000) {%>
                  <p class="text-muted mb-0">Pay when you receive your order</p>
                  <% }else{ %>
                  <p class="text-muted mb-0">⚠️ COD not available for orders above 1000</p>
                  <% } %>
                </label>
              </div>
            </div>

            <div class="payment-option">
              <div class="form-check">
                <input class="form-check-input" type="radio" name="paymentMethod" id="onlinePayment" value="online payment">
                <label class="form-check-label" for="onlinePayment">
                  <strong>Secure online payment</strong>
                  <p class="text-muted mb-0"> Credit/Debit Cards, UPI, Net Banking</p>
                </label>

              </div>
            </div>


            <div class="payment-option">
              <div class="form-check">
                <input class="form-check-input" type="radio" name="paymentMethod" id="wallet" value="Wallet">
                <label class="form-check-label" for="wallet">
                  <strong>Wallet</strong>
                  <p class="text-muted mb-0">Pay using your wallet balance <span id="wallet-balance-display"></span></p>
                </label>
              </div>
            </div>

          </div>
        </div>

      </div>


      <div class="col-lg-5">
        <div class="order-summary">
          <h5 class="mb-4">Order Summary</h5>


          <% cartProducts.forEach((product)=>{ %>
          <div class="d-flex mb-4 align-items-center">


            <img src="<%= product.productId.images[0] %>" alt="Product" class="product-img">
            <div class="ms-3">
              <h6 class="mb-1"><%= product.productId.name %></h6>
              <p class="text-muted mb-0">Quantity: <%= product.quantity %></p>
              <p class="mb-0">
                <% if (product.highestDiscount > 0) { %>

                <span style="color: #000;font-weight:500;font-size: 14px;">
                  ₹<%= product.finalPrice * product.quantity %>
                </span>
                <del style="font-size: 14px;">
                  ₹<%= product.productId.price * product.quantity %>
                </del>
                <span style="color: rgb(110, 8, 110); font-weight: bold; font-size: 14px;">
                  <%= product.highestDiscount %>% off
                </span>
                <% } else { %>
                <span style="color: #000;font-weight: 500; font-size: 14px;">
                  ₹<%= product.productId.price * product.quantity %>
                </span>
                <% } %>
              </p>


            </div>



          </div>
          <% }) %>

          <input class="coupon-code" id="couponInput" type="text" placeholder="Enter coupon code" value="<%= appliedCoupon ? appliedCoupon.code : '' %>">

          <button style="padding: 2px 20px; height: 40px;margin-top: 5px;margin-bottom: 10px;" class="btn btn-primary" id="applyCouponBtn">Apply</button>

          <div id="appliedCouponDiv" class="applied-coupon" style="border: 0.3px solid rgb(186, 186, 186); border-radius: 5px; padding: 5px; display: none; width: 70%; background-color: rgb(249, 248, 248);">
            <span style="padding: 10px;">Applied: <strong id="appliedCouponCode"></strong></span>
            <button id="removeCouponBtn" style="margin-left: 10%;  color: rgb(162, 1, 1); border: none; padding: 3px 7px; background-color: rgb(249, 248, 248);">Remove</button>
          </div>

          <h6>Available Coupon</h6>

          <% if (availableCoupons.length > 0) { %>




          <div class="border-top pt-3 border-bottom pb-3">

            <div style="border: 1px solid grey; border-radius: 5px;">
              <ul class="list-group">
                <% availableCoupons.forEach(coupon => { %>
                <li class="list-group-item">
                  <strong style="font-size: large; color: #742070;font-weight: 500;"><%= coupon.code %></strong>
                  <button style="border: none; background-color: white; color: #742070;
                                    font-weight: bold; font-size: small; margin-left: 50%;" class="btn btn-link apply-btn" onclick="selectCoupon('<%= coupon.code %>', this)">Apply</button>

                  <p class="text-muted" style="margin: 0;">Get Instant Discount ₹<%= coupon.discountAmount %></p>
                  <p class="text-muted" style="margin: 0;">Valid on orders above ₹<%= coupon.minOrderAmount %></p>
                </li>
                <% }); %>
              </ul>
            </div>
          </div>
          <% } else{ %>
          <span style="color: #742070;">You have no available coupon!</span>
          <% } %>


          <form id="orderForm" action="/placeOrder" method="POST">

            <div class="border-top pt-3">
              <div class="d-flex justify-content-between mb-2">
                <span>Total MRP</span>
                <span class="total-mrp">₹<%= cart.originalTotal %></span>
              </div>
              <div class="d-flex justify-content-between mb-2">
                <span>Saving on MRP</span>
                <span class="amount-saved" style="color: green;">-₹<%= cart.amountSaved %></span>
              </div>
              <div class="d-flex justify-content-between mb-2">
                <span id="subTotal">Subtotal</span>
                <span>₹<%= cart.subTotal %></span>
              </div>


              <div class="d-flex justify-content-between mb-2">
                <span>Coupon Applied</span>
                <span id="couponDiscount">-₹<%= appliedCoupon ? couponDiscount : '0.00' %></span>
              </div>
              <div class="d-flex justify-content-between mb-2">
                <span>Shipping charge:</span>
                <span class="text-danger">₹<%= cart.deliveryCharge %></span>
              </div>

              <div class="d-flex justify-content-between border-top pt-2 mt-2">
                <strong>Total</strong>
                <strong id="totalPrice">₹<%= cart.totalPrice %></strong>
              </div>
            </div>


            <div class="g-recaptcha mt-3" data-sitekey="6LfzM_4qAAAAACs_Jt9jH_EcW0TmNpZxn8LSnkrg"></div>

            <button id="placeOrder" class="btn btn-primary w-100 mt-4" style="background-color: #742070; border: none;">
              Place Order
            </button>

        </div>
      </div>
    </div>
    </form>
  </div>


  <%- include('../partials/footer') %>
  <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
  <script>
    document.addEventListener("DOMContentLoaded", function() {

      fetch("/getWalletBalance")
        .then(res => res.json())
        .then(data => {
          if (data.success) {
            const display = document.getElementById("wallet-balance-display");
            if (display) {
              display.textContent = `(Balance: ₹${data.balance})`;
            }
          }
        });


      const walletRadio = document.getElementById("wallet");

      walletRadio.addEventListener("change", async function() {
        if (walletRadio.checked) {
          try {
            const totalAmountElement = document.getElementById("totalPrice");
            const totalAmount = parseFloat(totalAmountElement.innerText.replace("₹", "").trim());

            const res = await fetch("/getWalletBalance");
            const data = await res.json();

            if (!data.success) {
              Swal.fire("Error", "Failed to fetch wallet balance.", "error");
              return;
            }

            const walletBalance = data.balance;

            if (walletBalance < totalAmount) {
              Swal.fire({
                icon: "warning",
                title: "Insufficient Wallet Balance",
                text: `Your wallet balance is ₹${walletBalance}, which is less than the total amount ₹${totalAmount}.`,
                confirmButtonColor: "#742070"
              }).then(() => {

                document.getElementById("cod").checked = true;
              });
            }
          } catch (error) {
            console.error("Wallet check error:", error);
            Swal.fire("Error", "Something went wrong while checking wallet balance.", "error");
          }
        }
      });



      const orderForm = document.getElementById("orderForm");
      const placeOrderBtn = document.getElementById("placeOrder");

      if (orderForm) {
        orderForm.addEventListener("submit", function(event) {
          event.preventDefault();
          handleOrderSubmission();
        });
      }

      if (placeOrderBtn) {
        placeOrderBtn.addEventListener("click", function() {
          handleOrderSubmission();
        });
      }

      function handleOrderSubmission() {

        const recaptchaResponse = grecaptcha.getResponse();
        if (!recaptchaResponse) {
          Swal.fire("Error", "Please verify that you are not a robot.", "error");
          return;
        }

        let selectedPayment = document.querySelector('input[name="paymentMethod"]:checked');
        if (!selectedPayment) {
          Swal.fire("Error", "Please select a payment method.", "error");
          return;
        }

        let paymentMethod = selectedPayment.value;

        Swal.fire({
          title: "Confirm Order",
          text: "Are you sure you want to place this order?",
          icon: "warning",
          showCancelButton: true,
          confirmButtonColor: "#742070",
          cancelButtonColor: "#d33",
          confirmButtonText: "Yes, Place Order"
        }).then((result) => {
          if (result.isConfirmed) {
            placeOrder(recaptchaResponse, paymentMethod);
          }
        });
      }

      function placeOrder(recaptchaToken, paymentMethod) {
        const totalAmountElement = document.getElementById("totalPrice");
        if (!totalAmountElement) {
          Swal.fire("Error", "Total amount not found.", "error");
          return;
        }

        const totalAmount = parseFloat(totalAmountElement.innerText.replace("₹", "").trim()); // ✅ Extract numeric value

        if (isNaN(totalAmount) || totalAmount <= 0) {
          Swal.fire("Error", "Invalid total amount.", "error");
          return;
        }


        if (!recaptchaToken) {
          Swal.fire("Error", "Please complete the reCAPTCHA verification.", "error");
          return;
        }


        Swal.fire({
          title: "Processing",
          text: "Please wait while we process your order...",
          allowOutsideClick: false,
          didOpen: () => {
            Swal.showLoading();
          }
        });


        if (paymentMethod === "online payment") {

          fetch("/createRazorpayOrder", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify({
                amount: totalAmount,
                recaptchaToken: recaptchaToken,
              })
            })
            .then(response => response.json())
            .then(data => {
              Swal.close();
              if (data.success) {

                openRazorpay(data.order, data.key);
              } else {
                Swal.fire("Error", data.message || "Failed to create order. Please try again.", "error");
              }
            })
            .catch(error => {
              Swal.close();
              Swal.fire("Error", "Failed to connect to payment service. Please try again.", "error");
              console.error("Payment error:", error);
            });
        } else {

          fetch("/placeOrder", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify({
                paymentMethod: paymentMethod,
                recaptchaToken: recaptchaToken,
              })
            })
            .then(response => response.json())
            .then(result => {
              Swal.close();

              if (result.success) {
                Swal.fire({
                  title: "Order Placed!",
                  text: "Your order has been placed successfully.",
                  icon: "success",
                  confirmButtonColor: "#742070",
                }).then(() => {
                  window.location.href = "/orderConfirmation";
                });
              } else {
                Swal.fire({
                  title: "Order Failed",
                  text: result.message || "Something went wrong. Please try again.",
                  icon: "error",
                  confirmButtonColor: "#742070",
                });
              }
            })
            .catch(async (error) => {
              Swal.close();

              try {
                const res = await error.response?.json?.();
                const message = res?.message || "Failed to place order. Please try again.";
                Swal.fire("Error", message, "error");
              } catch (err) {
                Swal.fire("Error", "Failed to place order. Please try again.", "error");
                console.error("Order error:", error);
              }
            });
        }
      }


    });
  </script>
  <script src="/script/razorpay.js"></script>





  <script>
    document.addEventListener("DOMContentLoaded", function() {
      document.getElementById("applyCouponBtn").addEventListener("click", applyCoupon);
      document.getElementById("removeCouponBtn").addEventListener("click", removeCoupon);

      document.querySelectorAll(".apply-btn").forEach(btn => {
        btn.addEventListener("click", function() {
          const couponCode = this.parentElement.querySelector("strong").innerText.trim();
          selectCoupon(couponCode);
        });
      });


      const appliedCoupon = "<%= appliedCoupon ? appliedCoupon.code : '' %>";
      if (appliedCoupon) {
        document.getElementById("couponInput").value = appliedCoupon;
        updateButtons(appliedCoupon);
      } else {
        document.getElementById("appliedCouponDiv").style.display = "none";
      }

    });

    function selectCoupon(code) {
      document.getElementById("couponInput").value = code;
      applyCoupon();
    }

    async function applyCoupon() {
      const couponCode = document.getElementById("couponInput").value.trim();
      if (!couponCode) {
        Toastify({
          text: "Please enter a coupon code.",
          duration: 3000,

          gravity: "top",
          position: "right",
          offset: {
            x: 160,
            y: 128
          },
          style: {
            background: "purple",
            color: "white",
            boxShadow: "0px 4px 6px rgba(0, 0, 0, 0.1)",
            borderRadius: "6px",
            padding: "10px 40px"
          },
          stopOnFocus: true
        }).showToast();
        return;
      }
      try {
        const response = await fetch("/apply-coupon", {
          method: "POST",
          headers: {
            "Content-Type": "application/json"
          },
          body: JSON.stringify({
            couponCode
          })
        });

        const data = await response.json();

        if (data.success) {
            updateButtons(couponCode);
            document.getElementById("couponDiscount").innerText = `-₹${data.discountAmount}`;
            document.getElementById("totalPrice").innerText = `₹${data.newTotal}`;
            if (data.subTotal) {
              document.getElementById("subTotal").innerText = `₹${data.subTotal}`;
              
            }
        } else {
          Toastify({
            text: data.message || "Something went wrong.",
            duration: 3000,
            gravity: "top",
            position: "right",
            offset: {
              x: 160,
              y: 120
            },
            style: {
              background: "purple",
              color: "white",
              boxShadow: "0px 4px 6px rgba(0, 0, 0, 0.1)",
              borderRadius: "6px",
              padding: "10px 40px"
            },
            stopOnFocus: true
          }).showToast();
        }
      } catch (error) {
        console.error("Error applying coupon:", error);
      }
    }


    async function removeCoupon() {
      try {
        const response = await fetch("/remove-coupon", {
          method: "POST"
        });
        const data = await response.json();

        if (data.success) {
      document.getElementById("appliedCouponDiv").style.display = "none";
      document.getElementById("couponInput").value = "";

      document.getElementById("couponDiscount").innerText = "-₹0.00";
      document.getElementById("totalPrice").innerText = `₹${data.newTotal}`;
      document.getElementById("subTotal").innerText = `₹${data.subTotal}`;

      const mainApplyBtn = document.getElementById("applyCouponBtn");
      mainApplyBtn.innerText = "Apply";
      mainApplyBtn.disabled = false;

      document.querySelectorAll(".apply-btn").forEach(btn => {
        btn.innerText = "Apply";
        btn.classList.add("btn-link");
        btn.disabled = false;
      });
        } else {
          alert(data.message);
        }
      } catch (error) {
        console.error("Error removing coupon:", error);
      }
    }


    function updateButtons(code) {

      document.getElementById("appliedCouponDiv").style.display = "block";
      document.getElementById("appliedCouponCode").innerText = code;


      const mainApplyBtn = document.getElementById("applyCouponBtn");
      mainApplyBtn.innerText = "Applied";

      mainApplyBtn.disabled = true;


      document.querySelectorAll(".apply-btn").forEach(btn => {
        const couponText = btn.parentElement.querySelector("strong").innerText.trim();
        if (couponText === code) {
          btn.innerText = "Applied";
          btn.classList.remove("btn-link");

          btn.disabled = true;
        }
      });
    }
  </script>
  <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
  <script src="https://www.google.com/recaptcha/api.js" async defer></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

  <script src="/script/search.js"></script>
  <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>

</html>